AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pp-scores-api

  Sample SAM Template for pp-scores-api
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 6

Resources:
  GraphQLFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: graphql.handler
      Runtime: nodejs14.x
      CodeUri: graphql/
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PlayersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref GameResultsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WinLossRatiosTable
      Environment:
        Variables:
          PLAYERS_TABLE: !Ref PlayersTable
          GAME_RESULTS_TABLE: !Ref GameResultsTable
          WIN_LOSS_RATIO_TABLE: !Ref WinLossRatiosTable
          # PLAYERS_WL_RATIO_GSI: !Ref 
      Events:
        AnyRequest:
          Type: Api
          Properties:
            Path: /graphql
            Method: ANY
  # PlayersTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     PrimaryKey:
  #       Name: playerID
  #       Type: String
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 2
  #       WriteCapacityUnits: 2
  PlayersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "playerID"
          AttributeType: "S"
        -
          AttributeName: "winLossRatio"
          AttributeType: "N"
        -
          AttributeName: "wlRatioInterval"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "playerID"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      GlobalSecondaryIndexes: 
        - 
          IndexName: "wlRatioInterval"
          KeySchema: 
            - 
              AttributeName: "wlRatioInterval"
              KeyType: "HASH"
            - 
              AttributeName: "winLossRatio"
              KeyType: "RANGE"
          Projection: 
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "2"
            WriteCapacityUnits: "2"

  GameResultsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: gameResultID
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  WinLossRatiosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "timePeriod"
          AttributeType: "S"
        -
          AttributeName: "playerWLRatio"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "timePeriod"
          KeyType: "HASH"
        -
          AttributeName: "playerWLRatio"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GraphQLFunction:
    Description: "GraphQL Lambda Function ARN"
    Value: !GetAtt GraphQLFunction.Arn
  GraphQLFunctionIamRole:
    Description: "Implicit IAM Role created for GraphQL function"
    Value: !GetAtt GraphQLFunction.Arn
  GraphQLApi:
    Description: "API Gateway endpoint URL for Prod stage for GraphQL function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/graphql/"
  PlayersTable:
    Description: "DynamoDB table to store player records"
    Value: !Ref PlayersTable
  GameResultsTable:
    Description: "DynamoDB table to store game results"
    Value: !Ref GameResultsTable
  WinLossRatioTable:
    Description: "DynamoDB table to store win loss ratios"
    Value: !Ref WinLossRatiosTable


